{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/countryapi.service.ts","./src/app/services/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'countries', component: CountriesComponent },\n  { path: 'country', component: CountriesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19Tracker';\n}\n\n\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input'\nimport { FormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { IvyCarouselModule } from 'angular-responsive-carousel';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FooterComponent } from './components/footer/footer.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule,\n    BrowserAnimationsModule,\n    IvyCarouselModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/globalData';\nimport { CountryapiService } from '../../services/countryapi.service'\nimport { Observable, merge } from 'rxjs';\nimport { Country } from 'src/app/models/countryData';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { DeathWiseDate } from 'src/app/models/date-wise-death'\nimport { RecWiseDate } from 'src/app/models/date-wise-rec'\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data: GlobalDataSummary[];\n  countries: string[] = [];\n  country$: Observable<Country[]>\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  dateWiseData;\n  dateWiseDeathData;\n  dateWiseRecData;\n  checkSelectedDateWise: DateWiseData[];\n  checkSelectedDateDeathData: DeathWiseDate[];\n  checkSelectedDateRecData: RecWiseDate[];\n\n\n  constructor(private service: DataServiceService, private api: CountryapiService) { }\n\n  ngOnInit(): void {\n    this.service.getDateWiseData().subscribe(\n      (result) => {\n        this.dateWiseData = result;\n      }\n    )\n\n    this.service.getDateWiseGlobalDeath().subscribe(\n      (result) => {\n        this.dateWiseDeathData = result;\n      }\n    )\n\n    this.service.getDateWiseGlobalRec().subscribe(\n      (result) => {\n        this.dateWiseRecData = result;\n      }\n    )\n\n    this.service.getGlobalData().subscribe(result => {\n      this.data = result;\n      this.data.forEach(cs => {\n        this.countries.push(cs.country)\n      })\n    })\n\n    this.country$ = this.api.getAllCountries();\n\n\n  }\n\n  updateValues(country: string) {\n    console.log(country)\n    this.data.forEach(cs => {\n      if (cs.country == country) {\n        this.totalActive = cs.active\n        this.totalDeaths = cs.deaths\n        this.totalRecovered = cs.recovered\n        this.totalConfirmed = cs.confirmed\n      }\n    })\n\n    this.checkSelectedDateWise = this.dateWiseData[country]\n    this.checkSelectedDateDeathData = this.dateWiseDeathData[country]\n    this.checkSelectedDateRecData = this.dateWiseRecData[country]\n    //console.log(this.checkSelectedDateWise)\n  }\n\n  public trackByFunction(index, country) {\n    if (!country) return null;\n    return index\n  }\n\n}\n\n\n\n\n\n","<div class=\"jumbotron bg-white text-center\">\n  <h1 id=\"title\" class=\"display-1\">By Country</h1>\n  <carousel cellsToShow=6 autoplay=true pauseOnHover=\"false\" autoplayInterval=\"500\" transitionDuration=1500 loop=\"true\"\n    dots=true>\n    <div class=\"carousel-cell\" *ngFor=\"let country of country$ | async, trackBy : trackByFunction\">\n      <img src=\"{{country.flag}}\">\n    </div>\n  </carousel>\n  <p class=\"lead\">This Website implements the data collected by John Hopkins University\n    <br>\n    Github repository can be found at <a href=\"https://github.com/CSSEGISandData/COVID-19\"\n      target=\"_blank\">CSSEGISandData/Covid-19</a>\n  </p>\n  <hr class=\"my-4\">\n  <p>The cases shown on this screen are individual cases divided by country.\n    <br>\n    Please select a country in the drop down below to view data based on each country and dates of confirmed cases\n    within the country</p>\n  <div class=\"mx-auto\">\n    <div class=\"form-group col-lg-5 mx-auto\">\n      <!--<label for=\"my-input\">Select Country</label>-->\n      <select name=\"\" class=\"form-control\" id=\"c\" #input (change)='updateValues(input.value)'>\n        <option value=\"{{country}}\" *ngFor=\" let country of countries\">{{country}}</option>\n      </select>\n    </div>\n  </div>\n  <app-dashboard [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'></app-dashboard>\n</div>\n\n<div class=\"tableConfirmed\">\n  <h3 class=\"tableHeading\">Confirms</h3>\n  <div class=\"table-responsive\">\n    <table class=\"table\">\n      <thead>\n        <tr style=\"text-align: center\">\n          <th>Count</th>\n          <th>Date</th>\n          <th>Total Confirmed</th>\n        </tr>\n      </thead>\n      <tbody style=\"text-align: center\">\n        <tr id=\"tableRow\" *ngFor='let case of checkSelectedDateWise; index as i '>\n          <td>{{i+1}}</td>\n          <td>{{case.date | date}}</td>\n          <td>{{case.cases}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<div class=\"tableDeaths\">\n  <h3 class=\"tableHeading\">Recoveries</h3>\n  <div class=\"table-responsive\">\n    <table class=\"table\">\n      <thead>\n        <tr style=\"text-align: center\">\n          <th>Count</th>\n          <th>Date</th>\n          <th>Total Recovered</th>\n        </tr>\n      </thead>\n\n      <tbody style=\"text-align: center\">\n        <tr id=\"tableRow\" *ngFor=' let rec of checkSelectedDateRecData; index as i '>\n          <td>{{i+1}}</td>\n          <td>{{rec.date | date}}</td>\n          <td>{{rec.cases}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<div class=\"tableRecovered\">\n  <h3 class=\"tableHeading\">Deaths</h3>\n  <div class=\"table-responsive\">\n    <table class=\"table\">\n      <thead>\n        <tr style=\"text-align: center\">\n          <th>Count</th>\n          <th>Date</th>\n          <th>Total Deaths</th>\n        </tr>\n      </thead>\n\n      <tbody style=\"text-align: center\">\n        <tr id=\"tableRow\" *ngFor=' let death of checkSelectedDateDeathData; index as i '>\n          <td>{{i+1}}</td>\n          <td>{{death.date | date}}</td>\n          <td>{{death.cases}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"card col p-3 m-3 \">\n    <div class=\"ui statistic\">\n      <div class=\"confirmedCases\">\n        <h2>Total Confirmed Cases</h2>\n      </div>\n      <div class=\"value\">\n        {{totalConfirmed}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card col p-3 m-3 \">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <div class=\"recoveredCases\">\n          <h2>Total Recovered Cases</h2>\n        </div>\n      </div>\n      <div class=\"value\">\n        {{totalRecovered}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card col p-3 m-3 \">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <div class=\"currentCases\">\n          <h2>Current Active Cases</h2>\n        </div>\n      </div>\n      <div class=\"value\">\n        {{totalActive}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card col p-3 m-3 \">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <div class=\"deathCases\">\n          <h2>Total Deaths</h2>\n        </div>\n      </div>\n      <div class=\"value\">\n        {{totalDeaths}}\n      </div>\n    </div>\n  </div>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\n  <h1 id=\"footer\">Created By Johnny Dieu <img id=\"me\" src=\"assets/images/icon.png\" /></h1>\n</div>\n<br>\n<br>\n<div class=\"bar\">\n  <a href=\"mailto:johnnydieu@gmail.com\"><i class=\"far fa-envelope\"></i></a>\n\n  <a href=\"https://github.com/Johnny-Dieu\" target=\"_blank\"><i class=\"fab fa-github\"></i> </a>\n\n  <a href=\"https://www.linkedin.com/in/johnny-dieu/\" target=\"_blank\"> <i class=\"fab fa-linkedin\"></i> </a>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataServiceService } from '../../services/data-service.service'\nimport { GlobalDataSummary } from 'src/app/models/globalData';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  dataTable = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selection: string\n  caseNumber = 100000;\n  globalData: GlobalDataSummary[];\n  chart = {\n    PieChart: \"PieChart\",\n    LineChart: \"LineChart\",\n    height: 900\n  }\n  LineOptions = {\n    animation: {\n      duration: 500,\n      easing: 'inAndOut',\n    },\n    legend: 'none',\n    bar: { groupWidth: \"95%\" },\n    colors: ['#28df99']\n  }\n  pieOptions = {\n    animation: {\n      duration: 500,\n      easing: 'inAndOut'\n    },\n    pieHole: 0.4,\n    sliceVisibilityThreshold: .02\n  }\n\n  constructor(private dataService: DataServiceService) { }\n\n  initChart(caseType: string) {\n    this.dataTable = [];\n    //this.dataTable.push([\"Country\", \"Cases\"])\n\n    this.globalData.forEach(cs => {\n      let value: number\n      if (caseType == \"con\") {\n        if (cs.confirmed > this.caseNumber) {\n          value = cs.confirmed\n        }\n      }\n      if (caseType == \"dth\") {\n        if (cs.deaths > this.caseNumber) {\n          value = cs.deaths\n        }\n      }\n      if (caseType == \"rec\") {\n        if (cs.recovered > this.caseNumber) {\n          value = cs.recovered\n        }\n      }\n      if (caseType == \"act\") {\n        if (cs.active > this.caseNumber) {\n          value = cs.active\n        }\n      }\n      this.dataTable.push([\n        cs.country, value\n      ])\n    })\n  }\n\n\n\n  ngOnInit(): void {\n    this.dataService.getGlobalData()\n      .subscribe({\n        next: (result) => {\n          console.log(result);\n          this.globalData = result;\n          result.forEach(cs => {\n            if (!Number.isNaN(cs.confirmed)) {\n              this.totalActive += cs.active\n              this.totalConfirmed += cs.confirmed\n              this.totalDeaths += cs.deaths\n              this.totalRecovered += cs.recovered\n            }\n          })\n\n          this.initChart(\"con\");\n        }\n      }\n      )\n  }\n\n  updateChart(input: HTMLInputElement) {\n    console.log(input.value);\n    this.selection = input.value\n    this.initChart(input.value)\n    return this.selection\n  }\n\n  updateCaseNumber(input: HTMLInputElement) {\n    console.log(this.caseNumber)\n    console.log(input.value);\n    var value = parseInt(input.value)\n    this.caseNumber = value\n\n    return this.caseNumber\n  }\n}\n","<img class=\"animate__animated animate__pulse center\" id=\"icon\" src=\"assets/images/edited.png\">\n\n<div class=\"jumbotron bg-white text-center\">\n  <h1 class=\"display-4\">Coronavirus Tracker</h1>\n  <hr class=\"my-4\">\n  <p class=\"lead\">This Website implements the data collected by John Hopkins University\n    <br>\n    Github repository can be found at <a href=\"https://github.com/CSSEGISandData/COVID-19\"\n      target=\"_blank\">CSSEGISandData/Covid-19</a>\n  </p>\n  <hr class=\"my-4\">\n  <p>The purpose of this website was a fun side project to help inform the public about current cases around the\n    country involving <a\n      href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/question-and-answers-hub/q-a-detail/q-a-coronaviruses\"\n      target=\"_blank\">Covid-19</a>.\n    <br>\n    The cases shown on this screen are global cases, please navigate to Countries to find a\n    breakdown of each country.</p>\n  <h1>Global Cases</h1>\n  <app-dashboard [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'></app-dashboard>\n</div>\n\n<hr>\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label for=\"selection\">Select Cases:</label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\" id='options'>\n        <input type=\"radio\" id='con' #con (click)='updateChart(con)' value=\"con\" name=\"caseType\" tabindex=\"0\"\n          class=\"hidden\" checked=\"checked\">\n        <label for='con'>Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id='dth' #dth (click)='updateChart(dth)' value=\"dth\" name=\"caseType\" tabindex=\"0\"\n          class=\"hidden\">\n        <label for='dth'>Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id='act' #act (click)='updateChart(act)' value=\"act\" name=\"caseType\" tabindex=\"0\"\n          class=\"hidden\">\n        <label for='act'>Active</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id='rec' #rec (click)='updateChart(rec)' value=\"rec\" name=\"caseType\" tabindex=\"0\"\n          class=\"hidden\">\n        <label for='rec'>Recovered</label>\n      </div>\n    </div>\n  </div>\n</div>\n<form id=\"input-form\" class=\"center\">\n  <mat-form-field id=\"input-full-width\">\n    <mat-label>Show Cases Greater Than:</mat-label>\n    <input matInput name=\"value\" #value type=\"number\" placeholder=\"100,000\">\n  </mat-form-field>\n  <button mat-button color=\"go\" type=\"button\" (click)='updateCaseNumber(value)' (click)='updateChart(con)'>Go</button>\n</form>\n<carousel cellWidth=\"100%\" height=\"80%\" arrowsTheme='dark'>\n  <div class=\"carousel-cell\">\n    <google-chart [type]='chart.PieChart' [options]=\"pieOptions\" [height]='chart.height' style=\"width:100%\"\n      [data]='dataTable'>\n    </google-chart>\n  </div>\n  <div class=\"carousel-cell\">\n    <google-chart [type]=\"chart.LineChart\" [options]=\"LineOptions\" [height]='chart.height' style=\"width:100%\"\n      [data]='dataTable'>\n    </google-chart>\n  </div>\n</carousel>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <a class=\"navbar-brand\" href=\"#\">Covid-19 Tracker</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink='countries'>Countries</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Country } from '../models/countryData'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryapiService {\n  private api = 'https://restcountries.eu/rest/v2';\n\n  constructor(private http: HttpClient) { }\n\n  getAllCountries() {\n    return this.http.get<Country[]>(`${this.api}/all`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { map, catchError } from 'rxjs/operators'\nimport { GlobalDataSummary } from '../models/globalData'\nimport { DateWiseData } from '../models/date-wise-data'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private baseUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/'\n  private dateWiseUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'\n  private globalDeaths = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'\n  private globalRec = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv'\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseUrl, { responseType: 'text' })\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/)\n        dates.splice(0, 4);\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n          let con = cols[1];\n          cols.splice(0, 4);\n          // console.log(con , cols);\n          mainData[con] = [];\n          cols.forEach((value, index) => {\n            let dw: DateWiseData = {\n              cases: +value,\n              country: con,\n              date: new Date(Date.parse(dates[index]))\n            }\n            mainData[con].push(dw)\n          })\n        })\n        console.log(mainData);\n        return mainData;\n      }))\n  }\n\n  getDateWiseGlobalDeath() {\n    return this.http.get(this.globalDeaths, { responseType: 'text' })\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        // console.log(rows);\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/)\n        dates.splice(0, 4);\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n          let con = cols[1];\n          cols.splice(0, 4);\n\n          mainData[con] = [];\n          cols.forEach((value, index) => {\n            let dw: DateWiseData = {\n              cases: +value,\n              country: con,\n              date: new Date(Date.parse(dates[index]))\n            }\n            mainData[con].push(dw)\n          })\n        })\n        console.log(mainData);\n        return mainData;\n      }))\n  }\n\n  getDateWiseGlobalRec() {\n    return this.http.get(this.globalRec, { responseType: 'text' })\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        // console.log(rows);\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/)\n        dates.splice(0, 4);\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n          let con = cols[1];\n          cols.splice(0, 4);\n          // console.log(con , cols);\n          mainData[con] = [];\n          cols.forEach((value, index) => {\n            let dw: DateWiseData = {\n              cases: +value,\n              country: con,\n              date: new Date(Date.parse(dates[index]))\n            }\n            mainData[con].push(dw)\n          })\n        })\n        //console.log(mainData);\n        return mainData;\n      }))\n  }\n\n  private globalDataUrl = ''\n  private exention = '.csv';\n  month: number\n  day: number\n  year: number\n\n  getDate(day: number) {\n    if (day < 10)\n      return '0' + day\n    else {\n      return day\n    }\n  }\n\n  constructor(private http: HttpClient) {\n    let now = new Date();\n    this.month = now.getMonth() + 1;\n    this.day = now.getDate();\n    this.year = now.getFullYear();\n\n    this.globalDataUrl = `${this.baseUrl}${this.getDate(this.month)}-${this.getDate(this.day)}-${this.year}${this.exention}`\n  }\n\n\n\n  getGlobalData() {\n    return this.http.get(this.globalDataUrl, { responseType: 'text' }).pipe(\n      map(result => {\n        let data: GlobalDataSummary[] = [];\n        let rawData = {}\n        let rows = result.split('\\n')\n        rows.splice(0, 1)\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n\n\n          let cs = {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10]\n          };\n          let temp: GlobalDataSummary = rawData[cs.country]\n          if (temp) {\n            temp.active = cs.active + temp.active\n            temp.confirmed = cs.confirmed + temp.confirmed\n            temp.deaths = cs.deaths + temp.deaths\n            temp.recovered = cs.recovered + temp.recovered\n\n            rawData[cs.country] = temp;\n          } else {\n            rawData[cs.country] = cs;\n          }\n        })\n        return <GlobalDataSummary[]>Object.values(rawData);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (error.status == 404) {\n          this.day = this.day - 1\n          this.globalDataUrl = `${this.baseUrl}${this.getDate(this.month)}-${this.getDate(this.day)}-${this.year}${this.exention}`\n          return this.getGlobalData()\n        }\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}